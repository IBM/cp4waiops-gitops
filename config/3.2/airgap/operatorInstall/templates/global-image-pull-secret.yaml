{{- if or .Values.spec.eventManager.enabled .Values.spec.aiManager.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: global-image-pull-secret
  annotations:
    argocd.argoproj.io/sync-wave: "40"
  {{- if .Values.spec.aiManager.enabled }}
  namespace: {{.Values.spec.aiManager.namespace}}
  {{- else if .Values.spec.eventManager.enabled }}
  namespace: {{.Values.spec.eventManager.namespace}}
  {{- end }}
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              set -x

              wget https://github.com/IBM/cloud-pak-cli/releases/latest/download/cloudctl-linux-amd64.tar.gz
              export CLOUDCTL_LAUNCH_SKIP_PREREQ_CHECK=true
              tar -xf cloudctl-linux-amd64.tar.gz
              chmod 755 cloudctl-linux-amd64
              mv cloudctl-linux-amd64 /usr/local/bin/cloudctl
              mkdir $HOME/offline

              export CASE_NAME={{.Values.spec.aiManager.caseName}}
              export CASE_VERSION={{.Values.spec.aiManager.caseVersion}}
              export CASE_ARCHIVE=$CASE_NAME-$CASE_VERSION.tgz
              export CASE_INVENTORY_SETUP=cpwaiopsSetup
              export OFFLINEDIR=$HOME/offline
              export CASE_REPO_PATH=https://github.com/IBM/cloud-pak/raw/master/repo/case
              export CASE_LOCAL_PATH=$OFFLINEDIR/$CASE_ARCHIVE

              export LOCAL_DOCKER_REGISTRY_HOST={{.Values.spec.localDockerRegistryHost}}
              export LOCAL_DOCKER_REGISTRY_PORT={{.Values.spec.localDockerRegistryPort}}
              export LOCAL_DOCKER_REGISTRY=$LOCAL_DOCKER_REGISTRY_HOST:$LOCAL_DOCKER_REGISTRY_PORT
              export LOCAL_DOCKER_REGISTRY_USER={{.Values.spec.localDockerRegistryUser}}
              export LOCAL_DOCKER_REGISTRY_PASSWORD={{.Values.spec.localDockerRegistryPassword}}

              if [[ {{.Values.spec.aiManager.enabled}} == true ]]; then
                export NAMESPACE={{.Values.spec.aiManager.namespace}}
              else
                export NAMESPACE={{.Values.spec.eventManager.namespace}}
              fi
             
              oc patch image.config.openshift.io/cluster --type=merge \
              -p '{"spec":{"registrySources":{"insecureRegistries":["'$LOCAL_DOCKER_REGISTRY'"]}}}' \
              || {
                echo "image.config.openshift.io/cluster patch failed."
                exit
              }

              cloudctl case save \
              --repo https://github.com/IBM/cloud-pak/raw/master/repo/case \
              --case $CASE_NAME \
              --version $CASE_VERSION \
              --outputdir $HOME/offline

              default_content=$(oc get imagecontentsourcepolicy/ibm-cp-waiops -o jsonpath={.metadata.name}) \
              || {
                echo "Create imagecontentsourcepolicy."
              }
              if [ "${default_content}" != "" ]; then
                oc delete imagecontentsourcepolicy/${default_content} \
                || {
                  echo "Imagecontentsourcepolicy already exit, and can not be deleted."
                  exit
                }
              fi

              cloudctl case launch \
                --case $OFFLINEDIR/$CASE_ARCHIVE \
                --inventory $CASE_INVENTORY_SETUP \
                --action configure-creds-airgap \
                --args "--registry $LOCAL_DOCKER_REGISTRY --user $LOCAL_DOCKER_REGISTRY_USER --pass $LOCAL_DOCKER_REGISTRY_PASSWORD"

              cloudctl case launch \
                --case $OFFLINEDIR/$CASE_ARCHIVE \
                --inventory $CASE_INVENTORY_SETUP \
                --action configure-cluster-airgap \
                --namespace $NAMESPACE \
                --args "--registry $LOCAL_DOCKER_REGISTRY --user $LOCAL_DOCKER_REGISTRY_USER --pass $LOCAL_DOCKER_REGISTRY_PASSWORD --inputDir $OFFLINEDIR"

              oc get imagecontentsourcepolicy/ibm-cp-waiops -o yaml > repositoryDigestMirrors \
              || {
                echo "imagecontentsourcepolicy created failed."
                exit 1
              }
              printf "  - mirrors:\n" >> repositoryDigestMirrors
              printf "    - $LOCAL_DOCKER_REGISTRY/cpopen\n" >> repositoryDigestMirrors
              printf "    - $LOCAL_DOCKER_REGISTRY/cp\n" >> repositoryDigestMirrors
              printf "    source: icr.io/cpopen\n" >> repositoryDigestMirrors
              printf "  - mirrors:\n" >> repositoryDigestMirrors
              printf "    - $LOCAL_DOCKER_REGISTRY/cp\n" >> repositoryDigestMirrors
              printf "    source: $LOCAL_DOCKER_REGISTRY/cpopen\n" >> repositoryDigestMirrors

              oc apply -f repositoryDigestMirrors \
              || {
                echo "imagecontentsourcepolicy apply failed."
                exit 1
              }

              echo -n "Waiting all nodes be ready ...."
              retries=800
              until [[ $retries == 0 ]]; do
                result=0
                echo -n "."
                for node_name in `oc get nodes -o jsonpath={..metadata.name}`
                do
                  status=$(oc get nodes $node_name | sed -n "2p" | awk '{print $2}')
                  if [[ $status != "Ready" ]]; then
                    result=1
                  fi
                done
                if [[ $result == 0 ]]; then
                  echo \n
                  echo "All nodes are Ready"
                  break
                fi
                sleep 10
                retries=$((retries - 1))
              done

              if [[ $result == 1 ]]; then
                echo \n
                echo "Some nodes are not ready after 8000s. Exit"
                exit
              fi

              rm -rf $OFFLINEDIR

      restartPolicy: Never
      {{- if .Values.spec.aiManager.enabled }}
      serviceAccountName: openshift-argocd-admin-ai
      {{- else if .Values.spec.eventManager.enabled }}
      serviceAccountName: openshift-argocd-admin-noi
      {{- end }}
  backoffLimit: 1
{{- end }}