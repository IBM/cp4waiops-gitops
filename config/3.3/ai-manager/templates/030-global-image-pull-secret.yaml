{{- if .Values.globalImagePullSecrets }}
apiVersion: batch/v1
kind: Job
metadata:
  name: global-image-pull-secret
  annotations:
    argocd.argoproj.io/sync-wave: "30"
  namespace: {{.Values.spec.aiManager.namespace}}
spec:
  template:
    spec:
      containers:
        - name: config
          image: quay.io/openshift/origin-cli:latest
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "500Mi"
              cpu: "500m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              set -x

              # Extract the existing pull secret from cluster
              rm -rf ${HOME}/.dockerconfigjson
              oc extract secret/pull-secret -n openshift-config --to ${HOME} --confirm
              if [[ $? -ne 0 ]]; then
                  logger "[ERROR] Failed to extract existing pull-secret!"
                  return 1
              fi

              {{- range .Values.globalImagePullSecrets }}
                DOCKER_REPO={{ .registry }}
                DOCKER_USER={{ .username }}
                DOCKER_KEY={{ .password }}
                DOCKER_AUTH=$DOCKER_USER:$DOCKER_KEY
                oc registry login --registry $DOCKER_REPO \
                --auth-basic=$DOCKER_AUTH \
                --to=${HOME}/.dockerconfigjson
              {{- end }}

              # Apply the new secret
              oc set data secret/pull-secret --from-file .dockerconfigjson=${HOME}/.dockerconfigjson -n openshift-config

              wait_time=40
              # master nodes
              sleep $wait_time
              num_masters=$(oc get machineconfigpools master --no-headers -o custom-columns=":status.machineCount")
              num_masters_ready=$(oc get machineconfigpools master --no-headers -o custom-columns=":status.readyMachineCount")
              # worker nodes
              num_workers=$(oc get machineconfigpools worker --no-headers -o custom-columns=":status.machineCount")
              num_workers_ready=$(oc get machineconfigpools worker --no-headers -o custom-columns=":status.readyMachineCount")
              attempt=1
              if [ $num_masters_ready -lt $num_masters ]; then
                while [[ $num_masters_ready -lt $num_masters ]] && [[ $attempt -le $attempts ]]
                do
                  echo "Not all master nodes updated"
                  echo "$num_masters_ready/$num_masters master nodes currently ready - $attempt/$attempts"
                  ((attempt=$attempt+1))
                  sleep $wait_time
                  num_masters_ready=$(oc get machineconfigpools master --no-headers -o custom-columns=":status.readyMachineCount")
                done
              else
                echo "All master nodes updated"
              fi
              attempt=1
              if [ $num_workers_ready -lt $num_workers ]; then
                while [[ $num_workers_ready -lt $num_workers ]] && [[ $attempt -le $attempts ]]
                do
                  echo "Not all worker nodes updated"
                  echo "$num_workers_ready/$num_workers worker nodes currently ready - $attempt/$attempts"
                  ((attempt=$attempt+1))
                  sleep $wait_time
                  num_workers_ready=$(oc get machineconfigpools worker --no-headers -o custom-columns=":status.readyMachineCount")
                done
              else
                echo "All worker nodes updated"
              fi

      restartPolicy: Never
      serviceAccountName: openshift-argocd-admin-ai
  backoffLimit: 1
{{- end }}