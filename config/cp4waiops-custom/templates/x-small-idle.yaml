{{- if eq .Values.profile "x-small-idle"  }}
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  name: aiops-custom-size-profile
data:
  profiles: |
    generatedFor: "NonHA"
    automationbase:
      kafka:
        replicas: 1
        config:
          default.replication.factor: 1
          min.insync.replicas: 1
        resources:
          limits:
            cpu: 500m
            memory: 1280Mi
          requests:
            cpu: 150m
            memory: 500Mi
      zookeeper:
        replicas: 1
        resources:
          limits:
            cpu: 1000m
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi
      elasticsearch:
        env:
          - name: ES_JAVA_OPTS
            value: -Xms512M -Xmx512M
        replicas: 1
        resources:
          limits:
            cpu: 500m
            memory: 1536Mi
          requests:
            cpu: 100m
            memory: 768Mi
        tls-proxy:
          resources:
            limits:
              cpu: 500m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 100Mi
    cp4waiops-eventprocessor:
      flink:
        # Settings for the jobmanager statefulSet
        jobmanager:
          replicas: 1
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 1Gi
        # Settings for the taskmanager statefulSet
        taskmanager:
          replicas: 1
          resources:
            limits:
              cpu: 1600m
              memory: 5888Mi
            requests:
              cpu: 500m
              memory: 2048Mi
        properties:
          jobmanager.memory.heap.size: 512mb
          jobmanager.memory.jvm-metaspace.size: 128mb
          taskmanager.memory.heap.size: 4096mb
          taskmanager.memory.managed.size: 512mb
          taskmanager.numberOfTaskSlots: 8
    configmaps:
    - name: aiops-topology-sizing
      data: 
        asm: |
          cassandra:
            specs:
              replicas: 1
            containers:
              cassandra:
                resources:
                  limits:
                    cpu: 600m
                    memory: 1500Mi
                  requests:
                    cpu: 20m
                    memory: 768Mi
                env:
                  - name: CASSANDRA_HEAP_SIZE
                    value: 600M
                  - name: CASSANDRA_HEAP_NEWSIZE
                    value: 150M
    operandconfigs:
    - name: aimanager-operator
      spec:
        aimanager:
          modelTrain:
            maxLearners: 1
    - name: ibm-management-kong
      spec:
        kong:
          replicaCount: 1
    - name: couchdb
      spec:
        couchdbcluster:
          size: 1
          resources:
            db:
              limits:
                cpu: 700m
                memory: 768Mi
              requests:
                cpu: 20m
                memory: 64Mi
            search:
              limits:
                cpu: 500m
                memory: 250Mi
              requests:
                cpu: 10m
                memory: 64Mi
            mgmt:
              limits:
                cpu: 500m
                memory: 128Mi
              requests:
                cpu: 10m
                memory: 64Mi
    - name: redis
      spec:
        redissentinel:
          resources:
            member:
              db:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              mgmt:
                limits:
                  cpu: 500m
                  memory: 150Mi
                requests:
                  cpu: 30m
                  memory: 64Mi
              proxy:
                limits:
                  cpu: 500m
                  memory: 150Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              proxylog:
                limits:
                  cpu: 500m
                  memory: 150Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
            sentinel:
              db:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
              mgmt:
                limits:
                  cpu: 500m
                  memory: 150Mi
                requests:
                  cpu: 30m
                  memory: 64Mi
              proxy:
                limits:
                  cpu: 500m
                  memory: 150Mi
                requests:
                  cpu: 20m
                  memory: 64Mi
              proxylog:
                limits:
                  cpu: 500m
                  memory: 150Mi
                requests:
                  cpu: 10m
                  memory: 32Mi
    - name: ir-lifecycle-operator
      spec:
        lifecycleservice:
          customSizing:
            logstash:
              resourceLimitsCPU: 625m
              resourceLimitsMemory: 1536Mi
              resourceRequestsCPU: 20m
              resourceRequestsMemory: 600Mi
            taskManager:
              resourceLimitsCPU: 500m
              resourceLimitsMemory: 1280Mi
              resourceRequestsCPU: 250m
              resourceRequestsMemory: 1280Mi
            jobManager:
              resourceLimitsCPU: 600m
              resourceLimitsMemory: 768Mi
              resourceRequestsCPU: 100m
              resourceRequestsMemory: 512Mi
    - name: ir-ai-operator
      spec:
        aiopsanalyticsorchestrator:
          customSizing:
            deployments:
              - name: probablecause
                replicas: 1
                containers:
                - name: probablecause
                  limits:
                    cpu: 1000m
                    memory: 1Gi
                  requests:
                    cpu: 20m
                    memory: 300Mi
              - name: classifier
                replicas: 1
                containers:
                - name: classifier
                  limits:
                    cpu: 1
                    memory: 2048Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
              - name: spark-worker
                replicas: 1
                containers:
                - name: spark-worker
                  limits:
                    cpu: 1
                    memory: 1000Mi
                  requests:
                    cpu: 10m
                    memory: 256Mi
              - name: spark-pipeline-composer
                replicas: 1
                containers:
                - name: spark-pipeline-composer
                  limits:
                    cpu: 250m
                    memory: 896Mi
                  requests:
                    cpu: 20m
                    memory: 128Mi
    - name: ir-core-operator
      spec:
        issueresolutioncore:
          customSizing:
            deployments:
              - name: ncodl-api
                replicas: 1
                containers:
                - name: api
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                  requests:
                    cpu: 60m
                    memory: 128Mi
              - name: ncodl-if
                replicas: 1
                containers:
                - name: iducforward
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                  requests:
                    cpu: 10m
                    memory: 128Mi
              - name: ncodl-ir
                replicas: 1
                containers:
                - name: iducrelay
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                  requests:
                    cpu: 10m
                    memory: 128Mi
              - name: ncodl-jobmgr
                replicas: 1
                containers:
                - name: jobmgr
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                  requests:
                    cpu: 10m
                    memory: 128Mi
              - name: ncodl-std
                replicas: 1
                containers:
                - name: standard
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                  requests:
                    cpu: 20m
                    memory: 128Mi
              - name: logstash
                replicas: 1
                containers:
                - name: logstash
                  limits:
                    cpu: 1000m
                    memory: 1792Mi
                  requests:
                    cpu: 20m
                    memory: 512Mi
            statefulSets:
              - name: ncobackup
                replicas: 1
                containers:
                - name: agg-gate
                  limits:
                    cpu: 500m
                    memory: 512Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
                - name: objserv
                  limits:
                    cpu: 500m
                    memory: 1024Mi
                  requests:
                    cpu: 10m
                    memory: 64Mi
              - name: ncoprimary
                replicas: 1
                containers:
                - name: objserv
                  limits:
                    cpu: 500m
                    memory: 1024Mi  
                  requests:
                    cpu: 10m
                    memory: 50Mi
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: ResourceLocker
metadata:
  name: aimanager-resource-locker
  namespace: resource-locker-operator
spec:
  patches:
  - id: aimanagermainprod-locker
    patchTemplate: |
      spec:
        helmValues:
          changeRisk:
            resources:
              limits:
                cpu: 750m
                memory: 1400Mi
              requests:
                cpu: 50m
                memory: 500Mi
          logAnomaly:
            resources:
              limits:
                cpu: 500m
                memory: 2048Mi
              requests:
                cpu: 250m
                memory: 128Mi
          aiPlatformApiServer:
            resources:
              limits:
                cpu: 200m
                memory: 2Gi
              requests:
                cpu: 10m
                memory: 50Mi
          global:
            logAnomaly:
              replicas: 1
    patchType: application/merge-patch+json
    targetObjectRef:
      apiVersion: ai-manager.watson-aiops.ibm.com/v1beta1
      kind: AIManagerMainProd
      name: aimanager
      namespace: cp4waiops
  serviceAccountRef:
    name: resource-locker-operator-controller-manager
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: ResourceLocker
metadata:
  name: iaf-resource-locker
  namespace: resource-locker-operator
spec:
  patches:
  - id: nginx-locker
    patchTemplate: |
      spec:
        replicas: 1
    patchType: application/strategic-merge-patch+json
    targetObjectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: ibm-nginx
      namespace: cp4waiops
  - id: usermgmt-locker
    patchTemplate: |
      spec:
        replicas: 1
    patchType: application/strategic-merge-patch+json
    targetObjectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: usermgmt
      namespace: cp4waiops
  - id: zen-core-locker
    patchTemplate: |
      spec:
        replicas: 1
    patchType: application/strategic-merge-patch+json
    targetObjectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: zen-core
      namespace: cp4waiops
  - id: zen-core-api-locker
    patchTemplate: |
      spec:
        replicas: 1
    patchType: application/strategic-merge-patch+json
    targetObjectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: zen-core-api
      namespace: cp4waiops
  - id: automationbase-locker
    patchTemplate: |
      spec:
        kafka:
          entityOperator:
            tlsSidecar:
              resources:
                limits:
                  cpu: 500m
                  memory: 128Mi
                requests:
                  cpu: 10m
                  memory: 16Mi
            topicOperator:
              resources:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 10m
                  memory: 100Mi
            userOperator:
              resources:
                limits:
                  cpu: 500m
                  memory: 256Mi
                requests:
                  cpu: 10m
                  memory: 100Mi
    patchType: application/merge-patch+json
    targetObjectRef:
      apiVersion: base.automation.ibm.com/v1beta1
      kind: AutomationBase
      name: automationbase-sample
      namespace: cp4waiops
  serviceAccountRef:
    name: resource-locker-operator-controller-manager
---
apiVersion: redhatcop.redhat.io/v1alpha1
kind: ResourceLocker
metadata:
  name: appmanager-resource-locker
  namespace: resource-locker-operator
spec:
  patches:
  - id: aiopsedge-operator-controller-manager-locker
    patchTemplate: |
      spec:
        replicas: 1
    patchType: application/strategic-merge-patch+json
    targetObjectRef:
      apiVersion: apps/v1
      kind: Deployment
      name: aiopsedge-operator-controller-manager
      namespace: {{.Values.aiManager.namespace}}
  serviceAccountRef:
    name: resource-locker-operator-controller-manager
---

apiVersion: redhatcop.redhat.io/v1alpha1
kind: ResourceLocker
metadata:
  name: common-services-resource-locker
  namespace: resource-locker-operator
spec:
  patches:
  - id: common-services-locker
    patchTemplate: |
      spec:
        services:

        - name: ibm-licensing-operator
          spec:
            IBMLicensing:
              datasource: datacollector
              resources:
                limits:
                  cpu: 200m
                  memory: 850Mi
                requests:
                  cpu: 100m
                  memory: 430Mi
            operandBindInfo: {}
        - name: ibm-mongodb-operator
          spec:
            mongoDB:
              metrics:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 350Mi
                  requests:
                    cpu: 100m
                    memory: 300Mi
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 640Mi
                requests:
                  cpu: 500m
                  memory: 640Mi
              storageClass: rook-cephfs
            operandRequest: {}
        - name: ibm-cert-manager-operator
          spec:
            certManager:
              certManagerCAInjector:
                resources:
                  limits:
                    cpu: 100m
                    memory: 520Mi
                  requests:
                    cpu: 20m
                    memory: 410Mi
              certManagerController:
                resources:
                  limits:
                    cpu: 80m
                    memory: 530Mi
                  requests:
                    cpu: 20m
                    memory: 230Mi
              certManagerWebhook:
                resources:
                  limits:
                    cpu: 60m
                    memory: 100Mi
                  requests:
                    cpu: 30m
                    memory: 40Mi
              configMapWatcher:
                resources:
                  limits:
                    cpu: 30m
                    memory: 60Mi
                  requests:
                    cpu: 30m
                    memory: 30Mi
        - name: ibm-iam-operator
          spec:
            authentication:
              auditService:
                resources:
                  limits:
                    cpu: 20m
                    memory: 40Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              authService:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 1090Mi
                  requests:
                    cpu: 300m
                    memory: 350Mi
              clientRegistration:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 50Mi
              config:
                onPremMultipleDeploy: false
              identityManager:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 410Mi
                  requests:
                    cpu: 130m
                    memory: 140Mi
              identityProvider:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 420Mi
                  requests:
                    cpu: 300m
                    memory: 150Mi
              replicas: 1
            oidcclientwatcher:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 256Mi
                requests:
                  cpu: 20m
                  memory: 34Mi
            operandBindInfo:
              bindings:
                protected-zen-serviceid:
                  secret: zen-serviceid-apikey-secret
            operandRequest: {}
            pap:
              auditService:
                resources:
                  limits:
                    cpu: 20m
                    memory: 40Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              papService:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 380Mi
                  requests:
                    cpu: 30m
                    memory: 190Mi
              replicas: 1
            policycontroller:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 60Mi
                requests:
                  cpu: 20m
                  memory: 30Mi
            policydecision:
              auditService:
                resources:
                  limits:
                    cpu: 20m
                    memory: 40Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 50Mi
                requests:
                  cpu: 70m
                  memory: 30Mi
            secretwatcher:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 145Mi
                requests:
                  cpu: 20m
                  memory: 40Mi
            securityonboarding:
              iamOnboarding:
                resources:
                  limits:
                    cpu: 1000m
                    memory: 1024Mi
                  requests:
                    cpu: 20m
                    memory: 64Mi
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 50Mi
                requests:
                  cpu: 20m
                  memory: 50Mi
        - name: ibm-healthcheck-operator
          spec:
            healthService:
              healthService:
                replicas: 1
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 20m
                    memory: 100Mi
              memcached:
                replicas: 1
                resources:
                  limits:
                    cpu: 200m
                    memory: 100Mi
                  requests:
                    cpu: 20m
                    memory: 50Mi
            mustgatherConfig: {}
            mustgatherService:
              persistentVolumeClaim:
                storageClassName: rook-cephfs
        - name: ibm-commonui-operator
          spec:
            commonWebUI:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 440Mi
                requests:
                  cpu: 130m
                  memory: 256Mi
            navconfiguration: {}
            operandRequest: {}
            switcheritem: {}
        - name: ibm-management-ingress-operator
          spec:
            managementIngress:
              replicas: 1
              resources:
                limits:
                  cpu: 1000m
                  memory: 170Mi
                requests:
                  cpu: 70m
                  memory: 70Mi
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-ingress-nginx-operator
          spec:
            nginxIngress:
              defaultBackend:
                replicas: 1
                resources:
                  limits:
                    cpu: 20m
                    memory: 50Mi
                  requests:
                    cpu: 10m
                    memory: 20Mi
              ingress:
                replicas: 1
                resources:
                  limits:
                    cpu: 1000m
                    memory: 350Mi
                  requests:
                    cpu: 100m
                    memory: 110Mi
              kubectl:
                resources:
                  limits:
                    cpu: 30m
                    memory: 150Mi
                  requests:
                    cpu: 30m
                    memory: 150Mi
        - name: ibm-auditlogging-operator
          spec:
            auditLogging:
              fluentd:
                resources:
                  limits:
                    cpu: 50m
                    memory: 150Mi
                  requests:
                    cpu: 20m
                    memory: 20Mi
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-platform-api-operator
          spec:
            operandRequest: {}
            platformApi:
              auditService:
                resources:
                  limits:
                    cpu: 25m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 30Mi
              platformApi:
                resources:
                  limits:
                    cpu: 25m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 30Mi
              replicas: 1
        - name: ibm-monitoring-grafana-operator
          spec:
            grafana:
              dashboardConfig:
                resources:
                  limits:
                    cpu: 20m
                    memory: 80Mi
                  requests:
                    cpu: 20m
                    memory: 30Mi
              grafanaConfig:
                resources:
                  limits:
                    cpu: 150m
                    memory: 120Mi
                  requests:
                    cpu: 20m
                    memory: 40Mi
              routerConfig:
                resources:
                  limits:
                    cpu: 50m
                    memory: 50Mi
                  requests:
                    cpu: 20m
                    memory: 20Mi
            operandRequest: {}
        - name: ibm-user-data-services-operator
          spec:
            operandBindInfo: {}
            operandRequest: {}
        - name: ibm-apicatalog
          spec:
            apicatalogmanager:
              profile: small
            operandBindInfo: {}
            operandRequest: {}
        - name: cloud-native-postgresql
          resources:
          - apiVersion: batch/v1
            data:
              spec:
                activeDeadlineSeconds: 600
                backoffLimit: 5
                template:
                  metadata: null
                  spec:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                              - amd64
                              - ppc64le
                              - s390x
                    containers:
                    - command:
                      - bash
                      - -c
                      - kubectl delete pods -l app.kubernetes.io/name=cloud-native-postgresql
                      image: cp.icr.io/cp/cpd/edb-postgres-license-provider@sha256:607231e7337608278220853bd0bb04002488a6e74d4418752b1720133daef036
                      name: restart-edb-pod
                      resources:
                        limits:
                          cpu: 500m
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - ALL
                        privileged: false
                        readOnlyRootFilesystem: false
                    hostIPC: false
                    hostNetwork: false
                    hostPID: false
                    imagePullSecrets:
                    - name: ibm-entitlement-key
                    initContainers:
                    - command:
                      - bash
                      - -c
                      - |
                        cat << EOF | kubectl apply -f -
                        apiVersion: v1
                        kind: Secret
                        type: Opaque
                        metadata:
                          name: postgresql-operator-controller-manager-config
                        data:
                          EDB_LICENSE_KEY: $(base64 /license_keys/edb/EDB_LICENSE_KEY | tr -d '\n')
                        EOF
                      image: cp.icr.io/cp/cpd/edb-postgres-license-provider@sha256:607231e7337608278220853bd0bb04002488a6e74d4418752b1720133daef036
                      name: edb-license
                      resources:
                        limits:
                          cpu: 500m
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - ALL
                        privileged: false
                        readOnlyRootFilesystem: false
                    restartPolicy: OnFailure
                    securityContext:
                      runAsNonRoot: true
                    serviceAccountName: edb-license-sa
            force: true
            kind: Job
            name: create-postgres-license-config
          - apiVersion: v1
            force: true
            kind: ServiceAccount
            name: edb-license-sa
          - apiVersion: rbac.authorization.k8s.io/v1
            data:
              rules:
              - apiGroups:
                - ""
                resources:
                - pods
                - secrets
                verbs:
                - create
                - update
                - patch
                - get
                - list
                - delete
            force: true
            kind: Role
            name: edb-license-role
          - apiVersion: rbac.authorization.k8s.io/v1
            data:
              roleRef:
                apiGroup: rbac.authorization.k8s.io
                kind: Role
                name: edb-license-role
              subjects:
              - kind: ServiceAccount
                name: edb-license-sa
            force: true
            kind: RoleBinding
            name: edb-license-rolebinding
        - name: ibm-bts-operator
          spec:
            operandRequest: {}
        - name: ibm-zen-operator
          resources:
          - apiVersion: batch/v1
            data:
              spec:
                activeDeadlineSeconds: 600
                backoffLimit: 5
                template:
                  metadata: null
                  spec:
                    affinity:
                      nodeAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          nodeSelectorTerms:
                          - matchExpressions:
                            - key: kubernetes.io/arch
                              operator: In
                              values:
                              - amd64
                              - ppc64le
                              - s390x
                    containers:
                    - command:
                      - bash
                      - -c
                      - bash /setup/pre-zen.sh
                      env:
                      - name: common_services_namespace
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      image: icr.io/cpopen/ibm-zen-operator@sha256:ed0c4b15a0c9260976e8d71e8e3ed25a3b48a7223aa0a7a16a60f9b2a9fcda6e
                      name: pre-zen-job
                      resources:
                        limits:
                          cpu: 500m
                          memory: 512Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        capabilities:
                          drop:
                          - ALL
                        privileged: false
                        readOnlyRootFilesystem: false
                    restartPolicy: OnFailure
                    securityContext:
                      runAsNonRoot: true
                    serviceAccount: operand-deployment-lifecycle-manager
                    serviceAccountName: operand-deployment-lifecycle-manager
                    terminationGracePeriodSeconds: 30
            force: true
            kind: Job
            name: pre-zen-operand-config-job
        - name: redhat-marketplace-operator
          resources:
          - apiVersion: ibmcpcs.ibm.com/v1
            data:
              spec:
                configmapshares:
                - configmapname: namespace-scope
                  sharewith:
                  - namespace: openshift-redhat-marketplace
            force: true
            kind: SecretShare
            name: redhat-marketplace-operator
            namespace: ibm-common-services

    patchType: application/merge-patch+json
    targetObjectRef:
      apiVersion: operator.ibm.com/v1alpha1
      kind: OperandConfig
      name: common-service
      namespace: ibm-common-services
  serviceAccountRef:
    name: resource-locker-operator-controller-manager

{{- end }}
