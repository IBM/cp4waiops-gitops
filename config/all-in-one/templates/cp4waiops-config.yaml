{{- if .Values.cp4waiops.setup }}
{{- if .Values.cp4waiops.setup.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cp4waiops-config
spec:
  generators:
  {{- if .Values.argocd.allowLocalDeploy }}
  - clusters: {}
  {{- else }}
  - clusters:
      selector:
        matchLabels:
          argocd.argoproj.io/secret-type: cluster
  {{- end }}
  template:
    metadata:
      name: '{{ `{{name}}-cp4waiops-config` }}'
      annotations:
        argocd.argoproj.io/sync-wave: "300"
    spec:
      destination:
        namespace: '{{ .Values.cp4waiops.aiManager.namespace }}'
        server: '{{ `{{server}}` }}'
      project: default
      source:
        path: gitops-charts/aiops-config-operator
        repoURL: https://github.com/IBM/sample-app-gitops
        targetRevision: HEAD
        helm:
          parameters:
            - name: 'humio.enabled'
              {{- if .Values.cp4waiops.setup.humio }}
              value: {{ hasKey .Values.cp4waiops.setup.humio "enabled" | ternary .Values.cp4waiops.setup.humio.enabled true }}
              {{- else }}
              value: true
              {{- end }}
            - name: 'kafka.enabled'
              {{- if .Values.cp4waiops.setup.kafka }}
              value: {{ hasKey .Values.cp4waiops.setup.kafka "enabled" | ternary .Values.cp4waiops.setup.kafka.enabled true }}
              {{- else }}
              value: true
              {{- end }}
            - name: 'kube.enabled'
              {{- if .Values.cp4waiops.setup.kubernetes }}
              value: {{ hasKey .Values.cp4waiops.setup.kubernetes "enabled" | ternary .Values.cp4waiops.setup.kubernetes.enabled true }}
              {{- else }}
              value: true
              {{- end }}
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - Validate=false
          - SkipDryRunOnMissingResource=true
          - FailOnSharedResource=true
          - CreateNamespace=true
{{- end }}
{{- end }}
